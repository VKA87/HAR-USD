1+1
'hello world'
load(KernSmooth)
install.packages(KernSmooth)
"KernSmooth"
install.packages("KernSmooth")
load("KernSmooth")
library("KernSmooth")
babiid
1+1
exp(2)
exp(1)
e
E
exp
array([[1,2,3],[1,2,3]])
install.packages("swirl")
add2(3,4)
add2 <- function(x, y){
x+y
}
add2(3,4)
above <- function(x, n = 10){
use <- x > n
x[use]
}
x = 1:20
above(x)
above(x,12)
c = 1:4
c
c <- 1:4
r <- rnorm(4)
r
add2(c,r)
mean
lm
search()
x <- c(1,2,3)
x
y <- x
y
x <- c(x,1)
x
y
y = x
y
x <- c(x,1)
x
y
fixed <- c(FALSE,FALSE)
params <- fixed
params[!fixed]
params[!fixed] <- c(10,30)
params
fixed <- c(FALSE,FALSE)
fixed <- c(FALSE,TRUE)
params <- fixed
params[!fixed]
params[!fixed] <- c(10,30)
fixed <- c(FALSE,2)
params[!fixed]
rm()
ls()
rm(list=ls())
ls()
x <- seq(-1,1,0.1)
y <- x**2
plot(x,y)
plot(x,y,type="l")
par(mar)
par(ma"r)
2
par("mar")
par(mar=c(1,1,1,1))
plot(x,y,type="l")
x <- seq(-1,1,0.001)
y <- x**2
plot(x,y,type="l")
x <- as.Data("1970-01-01")
x <- as.Date("1970-01-01")
x
class(x)
unclass(x)
unclass(x) <- 1
x <- as.Date("1969-01-01")
x
unclass(x)
weekdays(x)
x <- as.Date("1987-11-18")
weekdays(x)
x <- as.Date("1981-07-17")
weekdays(x)
x <- as.Date("2017-05-17")
weekdays(x)
x <- 1:10
if (x>5){print(x)}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
f(3)
z <- 10
f(3)
data <- read.csv("specdata/001.csv")
dir()
wd()
getwd()
f <- gl(3,10)
str(gl)
class(f)
x <- c(rnorm(10), runif(10), rnorm(10,1))
split(x,f)
x[0]
x[1]
x
g <- split(x,f)
dim(g)
class(g)
g
library(datasets)
head(airquality)
split(airquality,airquality$Month)
colMeans[airquality[,"Wind"]]
colMeans[airquality[,c("Wind")]]
colMeans[airquality
]
str(colMeans)
colMeans(airquality[,c("Wind")])
colMeans(airquality[,"Wind"])
airquality[, "Wind"]
colMeans(airquality[,c("Wind","Ozone")])
mean(airquality[,"Wind"])
lm (y ~ x)
debug(lm)
lm (y ~ x)
library(datasets)
data("iris")
?iris
head(iris)
head(iris)
mean(iris[,"Sepal.Length"])
colMeans(iris)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data("mtcars")
head(mtcars)
sapply(mtcars,cyl,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
mtcars[mtcars$hp==4]
mtcars[mtcars$hp==4,]
mtcarscyl4 <- mtcars[mtcars$cyl==4,]
mtcarscyl8 <- mtcars[mtcars$cyl==8,]
abs(mean(mtcarscyl8$hp)-mean(mtcarscyl4$hp))
debug(ls)
ls()
n
n
mean(iris[,"Sepal.Length"])
nn
library(iris)
library(datasets)
data("iris")
mean(iris[iris$Species=='Virginica',"Sepal.Length"])
mean(iris[(iris$Species=='Virginica'),"Sepal.Length"])
mean(iris[(iris$Species=='Virginica'),"Sepal.Length"],na.rm==TRUE)
iris[(iris$Species=='Virginica'),"Sepal.Length"]
iris[(iris$Species=='virginica'),"Sepal.Length"]
mean(iris[(iris$Species=='virginica'),"Sepal.Length"],na.rm==TRUE)
mean(iris[(iris$Species=='virginica'),"Sepal.Length"])
rowMeans(iris[,[1:4]])
rowMeans(iris[,1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
mean(iris[(iris$Species=='virginica'),"Sepal.Length"])
rm()
ls
ls()
rm(list =ls())
library(datasets)
mean(iris$Sepal.Length)
colnames(iris)
colMeans(iris[,1:4])
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
mtcars8 <- mtcars[mtcars$cyl==8,]
mtcars4 <- mtcars[mtcars$cyl==8,]
mean(mtcars8$hp)-mean(mtcars4$hp)
mean(mtcars8$hp)
mtcars4 <- mtcars[mtcars$cyl==4,]
mean(mtcars8$hp)-mean(mtcars4$hp)
debug(ls)
ls
ls
exit()
q()
q
q
undebug(ls)
q
q()
Q
undebug(ls)
irisV <- iris[iris$Species == 'Virginica']
irisV <- iris[iris$Species == 'Virginica',]
mean(irisV$Sepal.Length)
irisV
irisV <- iris[iris$Species == 'virginica',]
mean(irisV$Sepal.Length)
apply(iris[, 1:4], 2, mean)
mean(mtcars8$hp)-mean(mtcars4$hp)
rm(list = ls())
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
install.packages('rJava', method = 'source')
install.packages('rJava', type = 'source')
library(xlsx)
library('rJava')
q()
setwd('Dropbox/Data_ML/MOOCs/JohnHopkins_R/Cleaning_week4/')
fileURL <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv'
download.file(fileURL, dest = 'hid.csv', method = 'curl')
data <- read.csv('hid.csv')
head(data)
cols <- colnames(data)
strsplit(cols, "wgtp")
rm(list=ls())
fileURL <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
download.file(fileURL, dest = 'gdp.csv', method = 'curl')
gdp <- read.csv('gdp.csv', skip = 5, nrows = 190, header=FALSE)
gp
gdp
gdp[,6:10]<-NULL
gdp[,3]<-NULL
head(gdp)
gdpV5 <- as.numeric(gsub(",","",gdp$V5))
gdpV5
gdp$V5 <- gdpV5
mean(gdp$V5)
grep("^United",gdp$V3)
gdp$V3
gdp$V4
grep("^United",gdp$V4)
fileURL <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileURL, destfile = 'edu.csv', method = 'curl')
edu <- read.csv("edu.csv")
colnames(gdp) <- c('CountryCode', 'Rank', "CountryName","GDP")
match <- merge(gdp,edu)
colnames(match)
colnames(edu)
grep('Fiscal year end: June', match$Special.Notes)
grep('June', match$Special.Notes)
grep('Fiscal year[\.]+June', match$Special.Notes)
grep('Fiscal year[.]+June', match$Special.Notes)
grep('Fiscal year[.]+ June', match$Special.Notes)
grep('Fiscal year.+ June', match$Special.Notes)
length(grep('Fiscal year.+ June', match$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
year(sampleTimes)
yr(sampleTimes)
substring(sampleSimes,1,4)
substring(sampleTimes,1,4)
sample2012 = sampleTimes[substring(sampleTimes,1,4)=="2012",]
sample2012 = sampleTimes[substring(sampleTimes,1,4)=="2012"]
sample2012
weekdays(sampleDay)
weekdays(sample2012)
sampleMond2012 <- sample2012[weekdays(sample2012)=="Monday"]
length(sampleMond2012)
length(sample2012)
